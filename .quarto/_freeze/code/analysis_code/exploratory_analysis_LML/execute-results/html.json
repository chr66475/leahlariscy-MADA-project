{
  "hash": "8083a32c4c98e8aeced39b43b380db24",
  "result": {
    "markdown": "---\ntitle: \"Exploratory analysis of year 2 surveillance data\"\nauthor: \"Leah Lariscy\"\nformat: html\neditor: visual\ntheme: solar\n---\n\n\n## Load necessary packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at /Users/leahlariscy/Desktop/MADA2023/leahlariscy-MADA-project\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggpmisc)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggpp\n\nAttaching package: 'ggpp'\n\nThe following object is masked from 'package:ggplot2':\n\n    annotate\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggthemes)\n```\n:::\n\n\n## Load data frames generated in data processing script\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhere()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/leahlariscy/Desktop/MADA2023/leahlariscy-MADA-project\"\n```\n:::\n\n```{.r .cell-code}\nn1_n2_clean <- readRDS(here(\"data/processed_data/year2_cfx_clean.rds\"))\nplant_clean <- readRDS(here(\"data/processed_data/year2_plant_clean.rds\"))\nn1_n2_plant_combine <- readRDS(here(\"data/processed_data/year2_cfx_plant_combined.rds\"))\ncovid_combine <- readRDS(here(\"data/processed_data/all_covid_combined.rds\"))\nall_data_combine <- readRDS(here(\"data/processed_data/year2_all_data_combined.rds\"))\nrecovery_percent <- readRDS(here(\"data/processed_data/recovery_percentages.rds\"))\nn1_n2n2_avg <- readRDS(here(\"data/processed_data/year2_cfx_avg.rds\"))\n```\n:::\n\n\n### Look at `all_data_combine`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(all_data_combine)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,190 × 15\n   date       facility target collecti…¹ avg_c…² avg_c…³ influ…⁴ influ…⁵ total…⁶\n   <date>     <ord>    <chr>       <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 2021-07-06 A        N1             93  24509.  0.0286  1.86e7     187 4.56e11\n 2 2021-07-06 A        N2             93   3429.  0.004   1.86e7     187 6.37e10\n 3 2021-07-06 B        N1             93  44933.  0.0524  1.10e7     272 4.93e11\n 4 2021-07-06 B        N2             93   3429.  0.004   1.10e7     272 3.76e10\n 5 2021-07-06 C        N1             93 173677.  0.203   7.08e6      96 1.23e12\n 6 2021-07-06 C        N2             93  56673.  0.0661  7.08e6      96 4.01e11\n 7 2021-07-12 A        N1             95 292622.  0.341   1.85e7     260 5.43e12\n 8 2021-07-12 A        N2             95  37505.  0.0438  1.85e7     260 6.96e11\n 9 2021-07-12 B        N1             95  77747.  0.0907  1.20e7      82 9.33e11\n10 2021-07-12 B        N2             95  19161.  0.0224  1.20e7      82 2.30e11\n# … with 1,180 more rows, 6 more variables: cases.symptom.onset <dbl>,\n#   cases.reported <dbl>, pcr_tests <dbl>, pcr_pos <dbl>, pcr_pos_7dma <dbl>,\n#   pcr_pos_14dma <dbl>, and abbreviated variable names ¹​collection_num,\n#   ²​avg_copy_L, ³​avg_copy_uL_rxn, ⁴​influent_flow_L, ⁵​influent_tss_mg_l,\n#   ⁶​total_copies\n```\n:::\n:::\n\n\n# Data Viz\n\n### Variation analysis\n\nGraphs to make:\n\n-   histogram of case count observations\n\n-   histogram of 7 day moving average case observations\n\n-   histogram of total daily copies\n\n-   histogram of copies per L\n\n-   histogram of percent positive qPCR assays\n\n### Co-variation analysis\n\nGraphs to make:\n\n## Single variate analysis\n\n### Clinical case 7 day moving average histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_combine %>% ggplot(aes(pcr_pos_7dma)) +\n  geom_histogram(fill = \"#C06C84\") +\nxlab(label = \"Clinical Case Seven Day Moving Average\") +\nylab(label = \"Count\") +\ntheme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 6 rows containing non-finite values (`stat_bin()`).\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/variate/7DMA_histo.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 6 rows containing non-finite values (`stat_bin()`).\n```\n:::\n\n```{.r .cell-code}\nsummary(covid_combine$pcr_pos_7dma)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n   0.00    4.80    8.95   11.10   15.40   38.60       6 \n```\n:::\n:::\n\n\n### PCR positive clinical cases histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_combine %>% ggplot(aes(pcr_pos)) +\n  geom_histogram(fill = '#F8B195') +\n  xlab(label = \"Daily Positive Clinical Cases\") +\n  ylab(label = \"Count\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/variate/pos_cases_histo.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n```{.r .cell-code}\nsummary(covid_combine$pcr_pos)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    5.00   14.00   31.43   36.00  437.00 \n```\n:::\n:::\n\n\n### Clinical case 14 day moving average histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_combine %>% ggplot(aes(pcr_pos_14dma)) +\n  geom_histogram(fill = \"#FF7E5A\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 13 rows containing non-finite values (`stat_bin()`).\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsummary(covid_combine$pcr_pos_14dma)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n   0.00    5.00    8.80   11.11   15.20   36.00      13 \n```\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/variate/14DMA_histo.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 13 rows containing non-finite values (`stat_bin()`).\n```\n:::\n:::\n\n\n### Total copies in WW at county level histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum_daily_copies_county <- all_data_combine %>% \n  drop_na() %>% \n  group_by(date, target, facility) %>% \n  summarize(mean_total_copies = mean(total_copies)) %>% \n  ungroup(facility) %>% \n  summarize(sum_total_copies = sum(mean_total_copies))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date', 'target'. You can override using\nthe `.groups` argument.\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n  sum_daily_copies_county %>% ggplot(aes(log10(sum_total_copies), fill = target)) +\n  geom_histogram() +\n      scale_fill_manual(name = \"Target\",values = c(\"#F67280\", \"#355C7D\")) +\n    xlab(label = \"Log10 Total Daily County-Level Copies\") +\n    ylab(label = \"Count\") +\n    theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/variate/total_copies_histo.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n```{.r .cell-code}\n  log10_sum_daily_copies <- log10(sum_daily_copies_county$sum_total_copies)\n  summary(log10_sum_daily_copies)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  11.21   12.74   13.14   13.00   13.34   14.05 \n```\n:::\n:::\n\n\n### Copies per liter histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>% #filter(target == \"N2\") %>% \n  drop_na() %>% \n  group_by(date, target, facility) %>% \n  summarize(mean_copies_L = mean(avg_copy_L)) %>% \n  ungroup(facility) %>% \n  summarize(sum_mean_copies_L = sum(mean_copies_L)) %>% \n  \n  ggplot(aes(log10(sum_mean_copies_L), fill = target)) +\n  geom_histogram() +\n      scale_fill_manual(name = \"Target\",values = c(\"#F67280\", \"#355C7D\")) +\n    xlab(label = \"Log10 Copies Per Liter\") +\n    ylab(label = \"Count\") +\n    theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date', 'target'. You can override using\nthe `.groups` argument.\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/variate/copies_L_histo.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n:::\n\n\n## Co-variate analysis: time series\n\n### Case 7 day moving average overtime, bar plot and GAM model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>% group_by(date) %>% \n  summarize(mean_7dma = mean(pcr_pos_7dma),\n            mean_pcr_pos = mean(pcr_pos)) %>% \n  ggplot(aes(x = date, y = mean_7dma)) +\n  geom_point(color = '#C06C84') +\n  geom_line(color = '#C06C84') +\n  xlab(label = \"Date\") +\n  ylab(label = \"Clinical Case 7-Day Moving Average\") +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/covariate/7DMA_time_plot.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\n### PCR positives per day over time, bar plot and GAM model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>% group_by(date) %>% \n  summarize(mean_pcr_pos = mean(pcr_pos)) %>% \n  ggplot(aes(x = date, y = mean_pcr_pos)) +\n  geom_bar(stat = \"identity\", color = '#F8B195') +\n  geom_line(color = 'black') +\n  ylab(label = \"Positive Cases Per Day\") +\n  xlab(label = \"Date\") +\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/covariate/pos_cases_time.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\n### Case 14 day moving average over time\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>% group_by(date) %>% \n  summarize(mean_14_dma = mean(pcr_pos_14dma)) %>% \n \n   ggplot(aes(x = date, y = mean_14_dma)) +\n  geom_bar(stat = \"identity\", color = '#FF7E5A') +\n  stat_smooth(method = \"gam\", color = 'black') +\n  ylab(label = \"Clinical Case 14-Day Moving Average\") +\n  xlab(label = \"Date\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/covariate/14DMA_time.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ s(x, bs = \"cs\")'\n```\n:::\n:::\n\n\n### Log10 total copies in wastewater over time (avg N1/N2)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>% #filter(target == \"N2\") %>% \n  drop_na(target) %>% #remove NAs from analysis\n  group_by(date, facility) %>% #this will allow me to average the two targets\n  summarize(mean_total_copies = mean(total_copies)) %>% #average across N1 and N2\n  ungroup(facility) %>% #need to do this so I can add the avg total copies of each WRF\n  summarize(sum_total_copies = sum(mean_total_copies)) %>% #total daily county copies\n  ggplot(aes(date, log10(sum_total_copies))) +\n  geom_point(color = \"#80256D\") +\n  geom_line(color = \"#80256D\") +\n   xlab(label = \"Date\") +\n  ylab(label = \"Log10 Total Daily County-Level Copies\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 10 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/covariate/avg_total_copies_time.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 10 rows containing missing values (`geom_point()`).\n```\n:::\n:::\n\n\n### Log10 viral load in wastewater for N1 and N2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>% \n  group_by(date, target, facility) %>% \n  drop_na(target) %>% \n  summarize(mean_total_copies = mean(total_copies)) %>% \n  ungroup(facility) %>% \n  summarize(sum_total_copies = sum(mean_total_copies)) %>% \n  \n  \n  ggplot(aes(date, log10(sum_total_copies), color = target)) +\n  geom_point() +\n  geom_line() +\n  scale_color_manual(name = \"Target\",values = c(\"#F67280\", \"#355C7D\")) +\n  xlab(label = \"Date\") +\n  ylab(label = \"Log10 County-Level Viral Load\") +\n  theme_light() +\n  facet_wrap(vars(target),nrow = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date', 'target'. You can override using\nthe `.groups` argument.\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 14 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\n ggsave(here(\"figures/exploratory/covariate/total_copies_time.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 14 rows containing missing values (`geom_point()`).\n```\n:::\n:::\n\n\n### Log10 copies per liter across time (both N1 and N2)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>%\n  drop_na(target) %>% \n  group_by(date, target, facility) %>% \n  summarize(mean_copies_L = mean(avg_copy_L)) %>% \n  ungroup(facility) %>% \n  summarize(sum_mean_copies_L = sum(mean_copies_L)) %>% \n  ggplot(aes(date, log10(sum_mean_copies_L),color = target)) +\ngeom_line() +\n  geom_point() + \n  scale_color_manual(name = \"Target\",values = c(\"#F67280\", \"#355C7D\")) +\n  xlab(label = \"Date\") +\n  ylab(label = \"Log10 County-Level Copies Per Liter\") +\n  theme_light() +\n    facet_wrap(vars(target),nrow = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date', 'target'. You can override using\nthe `.groups` argument.\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\n ggsave(here(\"figures/exploratory/covariate/copies_L_time.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\n## Co-variate analysis: correlations between WW and clinical variables\n\n### Log10 copies per liter vs case 7DMA (N1/N2 average)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>% \n  drop_na() %>% \n  group_by(date, facility) %>% \n  summarize(mean_copies_L = mean(avg_copy_L), \n            mean_7dma = mean(pcr_pos_7dma)) %>% \n  ungroup(facility) %>% \n  summarize(sum_mean_copies_L = sum(mean_copies_L),\n            mean_7dma = mean(mean_7dma)) %>% \n  ggplot(aes(log10(sum_mean_copies_L), log10(mean_7dma))) +\n  geom_point(color = \"#80256D\") +\n  stat_poly_line(color = \"#80256D\") +\n  stat_poly_eq(color = \"#80256D\") +\n   xlab(label = \"Log10 County-Level Copies Per Liter\") +\n  ylab(label = \"Log10 Clinical Case Seven Day Moving Average\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/covariate/copies_L_avg_vs_7DMA.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\n### Log10 copies per liter vs case 7DMA (N1 & N2)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>%  \n  drop_na(target) %>% \n  group_by(date, target, facility) %>% \n  summarize(mean_copies_L = mean(avg_copy_L), \n            mean_7dma = mean(pcr_pos_7dma)) %>% \n  ungroup(facility) %>% \n  summarize(sum_mean_copies_L = sum(mean_copies_L),\n            mean_7dma = mean(mean_7dma)) %>% \n  ggplot(aes(log10(sum_mean_copies_L), log10(mean_7dma), color = target)) +\n  geom_point() +\n  stat_poly_line() +\n  stat_poly_eq() +\n  scale_color_manual(name = \"Target\",values = c(\"#F67280\", \"#355C7D\")) +\n  xlab(label = \"Log10 County-Level Copies Per Liter\") +\n  ylab(label = \"Log10 Clinical Case Seven Day Moving Average\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date', 'target'. You can override using\nthe `.groups` argument.\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/covariate/copies_L_vs_7DMA.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\n### Log10 Copies per Liter vs daily clinical cases\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>%  \n  drop_na(target) %>% \n  group_by(date, target, facility) %>% \n  summarize(mean_copies_L = mean(avg_copy_L), \n            mean_pcr_pos = mean(pcr_pos)) %>% \n  ungroup(facility) %>% \n  summarize(sum_mean_copies_L = sum(mean_copies_L),\n            mean_pcr_pos = mean_pcr_pos) %>% \n  ggplot(aes(log10(sum_mean_copies_L), log10(mean_pcr_pos), color = target)) +\n  geom_point() +\n  stat_poly_line() +\n  stat_poly_eq() +\n  scale_color_manual(name = \"Target\",values = c(\"#F67280\", \"#355C7D\")) +\n  xlab(label = \"Log10 County-Level Copies Per Liter\") +\n  ylab(label = \"Log10 Daily Positive Clinical Cases\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date', 'target'. You can override using\nthe `.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date', 'target'. You can override using\nthe `.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/covariate/copies_L_vs_pcr_pos.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\n### Log10 Copies per Liter vs daily clinical cases (N1 N2 average)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>%  \n  drop_na(target) %>% \n  group_by(date, facility) %>% \n  summarize(mean_copies_L = mean(avg_copy_L), \n            mean_pcr_pos = mean(pcr_pos)) %>% \n  ungroup(facility) %>% \n  summarize(sum_mean_copies_L = sum(mean_copies_L),\n            mean_pcr_pos = mean_pcr_pos) %>% \n  ggplot(aes(log10(sum_mean_copies_L), log10(mean_pcr_pos))) +\n  geom_point(color = \"#80256D\") +\n  stat_poly_line(color = \"#80256D\") +\n  stat_poly_eq(color = \"#80256D\") +\n  xlab(label = \"Log10 County-Level Copies Per Liter\") +\n  ylab(label = \"Log10 Daily Positive Clinical Cases\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/covariate/copies_L_avg_vs_pcr_pos.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\n### Log10 viral load vs 7DMA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>% #filter(target == \"N2\") %>% \n  drop_na() %>% \n  group_by(date, facility) %>% \n  summarize(mean_daily_copies = mean(total_copies), \n            mean_7dma = mean(pcr_pos_7dma)) %>% \n  ungroup(facility) %>% \n  summarize(sum_mean_copies = sum(mean_daily_copies),\n            mean_7dma = mean(mean_7dma)) %>% \n  ggplot(aes(log10(sum_mean_copies), log10(mean_7dma))) +\n  geom_point(color = \"#80256D\") +\n  stat_poly_line(color = \"#80256D\") +\n  stat_poly_eq(color = \"#80256D\") +\n  xlab(label = \"Log10 Daily Viral Load\") +\n  ylab(label = \"Log10 Clinical Case Seven Day Moving Average\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/covariate/avg_total_copies_vs_7DMA.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\n### Log10 viral load vs 7DMA (N1 & N2)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>% \n  drop_na() %>% \n  group_by(date, target, facility) %>% \n  summarize(mean_daily_copies = mean(total_copies), \n            mean_7dma = mean(pcr_pos_7dma)) %>% \n  ungroup(facility) %>% \n  summarize(sum_mean_copies = sum(mean_daily_copies),\n            mean_7dma = mean(mean_7dma)) %>% \n  ggplot(aes(log10(sum_mean_copies), log10(mean_7dma), color = target)) +\n  geom_point() +\n  stat_poly_line() +\n  stat_poly_eq() +\n  scale_color_manual(name = \"Target\",values = c(\"#F67280\", \"#355C7D\")) +\n  xlab(label = \"Log10 Daily Viral Load\") +\n  ylab(label = \"Log10 Clinical Case Seven Day Moving Average\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date', 'target'. You can override using\nthe `.groups` argument.\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/covariate/total_copies_vs_7DMA.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\n### Look at relationship of copies/L and 7dma over time\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>% #filter(target == \"N2\") %>% \n  drop_na() %>% \n  group_by(date, facility) %>% \n  summarize(mean_copies_L = mean(avg_copy_L), \n            mean_7dma = mean(pcr_pos_7dma)) %>% \n  ungroup(facility) %>% \n  summarize(sum_mean_copies_L = sum(mean_copies_L),\n            mean_7dma = mean(mean_7dma)) %>% \n  ggplot(aes(x=date)) +\n  #geom_point(aes(y=log10(sum_mean_copies_L)/mean_7dma)) + \n  geom_line(aes(y=(log10(sum_mean_copies_L)/mean_7dma), color = \"red\")) +\n  geom_line(aes(y=log10(mean_7dma)), color = \"blue\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n### Log10 viral load vs daily positive cases\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>% \n  drop_na() %>% \n  group_by(date, target, facility) %>% \n  summarize(mean_daily_copies = mean(total_copies), \n            mean_pcr_pos = mean(pcr_pos)) %>% \n  ungroup(facility) %>% \n  summarize(sum_mean_copies = sum(mean_daily_copies),\n            mean_pcr_pos = mean_pcr_pos) %>% \n  ggplot(aes(log10(sum_mean_copies), log10(mean_pcr_pos), color = target)) +\n  geom_point() +\n  stat_poly_line() +\n  stat_poly_eq() +\n  scale_color_manual(name = \"Target\",values = c(\"#F67280\", \"#355C7D\")) +\n  xlab(label = \"Log10 Daily Viral Load\") +\n  ylab(label = \"Log10 Daily Positive Clinical Cases\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date', 'target'. You can override using\nthe `.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date', 'target'. You can override using\nthe `.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/covariate/total_copies_vs_pcr_pos.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\n### Log10 viral load vs daily positive cases\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_combine %>% \n  drop_na() %>% \n  group_by(date, facility) %>% \n  summarize(mean_daily_copies = mean(total_copies), \n            mean_pcr_pos = mean(pcr_pos)) %>% \n  ungroup(facility) %>% \n  summarize(sum_mean_copies = sum(mean_daily_copies),\n            mean_pcr_pos = mean_pcr_pos) %>% \n  ggplot(aes(log10(sum_mean_copies), log10(mean_pcr_pos))) +\n  geom_point(color = \"#80256D\") +\n  stat_poly_line(color = \"#80256D\") +\n  stat_poly_eq(color = \"#80256D\") +\n  xlab(label = \"Log10 Daily Viral Load\") +\n  ylab(label = \"Log10 Daily Reported Clinical Cases\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'date'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n![](exploratory_analysis_LML_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(here(\"figures/exploratory/covariate/total_copies_avg_vs_pcr_pos.png\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n",
    "supporting": [
      "exploratory_analysis_LML_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}