---
title: "Data cleaning and processing script"
author: "Leah Lariscy"
format: html
editor: visual
theme: solar
---

## Data introduction

For this project, I would like to work with my own real-world data to explore the relationship between **SARS-CoV-2 waste water surveillance data** and **COVID-19 clinical case data**.

### Hypotheses so far

Waste water surveillance data will begin to correlate less with the clinical data as we progress further into the pandemic. (as rapid, at-home testing becomes more prevalent)

Catchment-level surveillance data will correlate better to waste water catchment-level case data than it will with county-level data because people are more likely to poop at their own house and SARS-CoV-2 particles are shed more often in feces than they are in urine (Kim et al. 2020).

## Load necessary packages here

```{r}
library(tidyverse)
library(skimr)
library(here)
```

## Load the data here

recovery_output \<- read_csv(here("data/raw_data/recovery_data.csv"))

recovery_input \<- read_csv(here("data/raw_data/calfguard.csv"))

```{r}
here()
# Load CFX N1 data
n1 <- read_csv(here("data/raw_data/cfx_n1.csv"))

# Load CFX N2 data
n2 <- read_csv(here("data/raw_data/cfx_n2.csv"))

# Load Plant data
plant <- read_csv(here("data/raw_data/plant_data.csv"))

# Load COVID-19 Symptom data
covid_symptom <- read_csv(here("data/raw_data/ga_covid_data/epicurve_symptom_date.csv")) %>% 
  filter(county=="Clarke") %>% 
  select(symptom.date=`symptom date`, 
         cases, moving_avg_cases)

#Load COVID-19 Confirmed Case Data
covid_case <- read_csv(here("data/raw_data/ga_covid_data/epicurve_rpt_date.csv")) %>% 
  filter(county=="Clarke") %>% 
  select(report_date, 
         cases, 
         moving_avg_cases)

#Load COVID-19 Testing Data
covid_testing <- read_csv(here("data/raw_data/ga_covid_data/pcr_antigen_col.csv")) %>% 
  filter(county=="Clarke") %>% 
  select(collection_date = collection_dt, 
         pcr_tests = `ALL PCR tests performed`, 
         pcr_pos = `All PCR positive tests`, 
         pcr_pos_7dma = `7 day percent positive`,
         pcr_pos_14dma = `14 day percent positive`)

#Load Catchment-level COVID-19 Case Data
#covid_case_wrf = read_csv(here("data/raw_data/cases_wrf.csv"))

#Load CFX recovery data
recovery_output <- read_csv(here("data/raw_data/recovery_data.csv"))
recovery_input <- read_csv(here("data/raw_data/calfguard.csv"))
```

## Description of the data

### CFX N1 Data

`n1` \<- Waste water extracted RNA RT-qPCR results of SARS-CoV-2 N1 gene target

```{r}
skim(n1)
```

### CFX N2 Data

`n2` \<- Waste water extracted RNA RT-qPCR results of SARS-CoV-2 N2 gene target

```{r}
skim(n2)
```

### Plant Data

`plant` \<- Flow data from three Water Reclamation Facilities (WRF) in Athens-Clarke County (ACC).

```{r}
skim(plant)
```

### County-level COVID-19 Symptom Data

`covid_symptom` \<- Count of individuals who reported having symptoms of COVID-19 on a given day, subset to include only data from ACC. Accessed from Georgia Department of Public Health (GDPH) on 2023-01-31.

```{r}
skim(covid_symptom)
```

### County-level COVID-19 Case Data

`covid_case` \<- Count of confirmed cases of COVID-19 on a given day, subset to include only data from ACC. Accessed from GDPH on 2023-01-31.

```{r}
skim(covid_case)
```

### County-level COVID-19 Testing Data

`covid_testing` \<- Count of COVID-19 tests administered on a given day, subset to include only data from ACC. Accessed from GDPH on 2023-01-31.

```{r}
skim(covid_testing)
```

### Catchment-level COVID-19 Case Data

`covid_case_wrf` \<- Count of confirmed cases of COVID-19 on a given day from each WRF catchment zone in ACC.

```{r}
#I don't have access to this data yet, waiting on DPH partner to send.
```

## Data cleaning and wrangling

Currently, I have 7 unique sets of data. In order to do analysis on the data down the road, I want to figure out how to best combine these data sets.

Here is a list of the data sets I have:

1.  CFX N1 results
2.  CFX N2 results
3.  Plant flow and total suspended solids
4.  County-level COVID symptoms
5.  County-level COVID confirmed cases
6.  County-level COVID tests administered
7.  Catchment-level COVID confirmed cases
8.  CFX recovery input
9.  CFX recovery output

I will start by combining the CFX output data with the plant flow data and calling the dataframe `wbe`

Next, I will combine all COVID-related data

### Calculate SARS-CoV-2 concentrations from CFX data for both N1 and N2

```{r}
#N1 data here
n1 <- n1 %>% mutate(ct = as.numeric(ct), 
              copy_num_uL_rxn = as.numeric(10^((ct-36.046)/-3.5293)), #use standard curve slope here
              copy_num_uL_rxn = replace_na(copy_num_uL_rxn, 0.004)) #replace NAs with limit of detection (0.004 copies per uL of the reaction)

#N2 data here (because they have different standard curve equations)
n2 <- n2 %>% mutate(ct = as.numeric(ct),
              copy_num_uL_rxn = as.numeric(10^((ct-37.731)/-3.2505)),
              copy_num_uL_rxn = replace_na(copy_num_uL_rxn, 0.004))
              
```

### Combining and cleaning CFX data

```{r}

wbe_year2 <- bind_rows(n1, n2) %>% #combine dataframes with same number of rows
  mutate(
    date=as.Date(sample_date, format = "%d-%b-%y"), #change to date format
    facility=substr(sample_id, 1,2), #first two letters in sample_id is facility ID
    biological_replicate=substr(sample_id, nchar(sample_id), nchar(sample_id)), #last number in sample_id is the replicate number
    ct=as.numeric(ifelse(ct=="Undetermined", NA, ct)) #set NAs
  ) %>% 
  arrange(date, facility, target, biological_replicate) %>% 
  select(date, facility, target, biological_replicate, collection_num, ct, copy_num_uL_rxn) %>%
  mutate(facility = as.factor(facility), 
         facility = recode(facility, NO = "A", MI = "B", CC = "C"), 
         facility = ordered(facility, levels = c("A", "B", "C")), #set facility to factor and then set factor levels
         copy_num_L = copy_num_uL_rxn*20/5*60/280*1000*1000) %>% 
  filter(between(date, as.Date("2021-07-06") , as.Date("2022-12-21"))) 

saveRDS(wbe_year2, here("data/processed_data/year2_cfx_clean.rds"))
```

### Cleaning plant data

```{r}
plant_clean <- plant %>% 
  mutate(date = as.Date(date, format = "%m/%d/%Y"), #change to date format
         influent_flow_L = influent_flow_mg*1e6*231*(0.0254^3)*1000) %>%  #convert flow 
  mutate(facility = as.factor(wrf), facility = recode(facility, NO = "A", MI = "B", CC = "C"), facility = ordered(facility, levels = c("A", "B", "C"))) %>% #set facility to factor and then set factor levels
   select(date, facility, influent_flow_L, influent_tss_mg_l)

saveRDS(plant_clean, here("data/processed_data/year2_plant_clean.rds"))
```

### Combining CFX and plant data

```{r}
n1_n2_plant <- left_join(wbe_year2, plant_clean, by = c("date","facility")) %>% 
  mutate(total_copies = copy_num_L * influent_flow_L)

saveRDS(n1_n2_plant, here("data/processed_data/year2_cfx_plant_combined.rds"))
```

### Combining all COVID data

```{r}
covid <- full_join(
  covid_symptom%>%
    select(cases.symptom.onset=cases, date=symptom.date), 
  covid_case%>%
    select(cases.reported=cases, date=report_date), 
  by = "date"
) %>% 
  full_join(
    covid_testing%>%
      rename(date=collection_date), 
    by="date"
  ) %>%
  select(date, cases.symptom.onset, cases.reported, pcr_tests, pcr_pos, pcr_pos_7dma, pcr_pos_14dma) 
  #full_join(cases.wrf, by = "date")

saveRDS(covid, here("data/processed_data/all_covid_combined.rds"))
```

### Combining `n1_n2_plant` and `covid`

```{r}
all_data <- full_join(n1_n2_plant, covid, by = "date") %>% 
   filter(between(date, as.Date("2021-07-06") , as.Date("2022-12-21"))) 

saveRDS(all_data, here("data/processed_data/year2_all_data_combined.rds"))
```

### Cleaning recovery data sets

```{r}
#Start with recovery_output 
recovery_output_clean <- recovery_output %>% 
  mutate(ct = as.numeric(ct)) %>% 
  group_by(sample_id, cg_num) %>% 
  summarize(avg_ct = mean(ct)) %>% 
  separate(sample_id, into = c("facility", "collection_num", "rep"), sep = "_") %>% 
  mutate(collection_num = as.numeric(collection_num),
         copies_ul_rxn = 10^((avg_ct-30.7)/-3.238),
         copies_ul_sample = copies_ul_rxn *20/2*25/3*60/280) %>% 
  select(facility, collection_num, cg_num, copies_ul_sample, avg_ct) %>% 
  drop_na()

recovery_input_clean <- recovery_input %>% 
  mutate(ct = as.numeric(ct)) %>% 
  group_by(sample_id) %>% 
  summarize(avg_ct = mean(ct)) %>% 
  separate(sample_id, into = c("CG", "cg_num"), sep = "_") %>% 
  mutate(cg_num = as.numeric(cg_num),
         copies_ul_rxn = 10^((avg_ct-30.7)/-3.238),
         copies_ul_input = copies_ul_rxn *20/2*25/3*60/50*40/40000) %>% 
  select(cg_num, copies_ul_input, avg_ct) %>% 
  drop_na()
         
saveRDS(recovery_output_clean, here("data/processed_data/recovery_output_clean.rds"))
saveRDS(recovery_input_clean, here("data/processed_data/recovery_input_clean.rds"))
  
```

### Combining recovery data sets

```{r}
recovery_calc <- left_join(recovery_output_clean, recovery_input_clean, by = "cg_num") %>% 
  mutate(percent_recovery = (copies_ul_sample/copies_ul_input)*100) %>% 
  select(facility, collection_num, percent_recovery)

saveRDS(recovery_calc, here("data/processed_data/recovery_percentages.rds"))
```
